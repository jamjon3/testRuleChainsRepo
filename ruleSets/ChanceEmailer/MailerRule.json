{
  "name": "MailerRule",
  "rule": "import edu.usf.cims.emailer.EmailerEngine\n\ndef mailEngine = new EmailerEngine()\ndef config = new ConfigObject()\ndef templateEngine = new groovy.text.GStringTemplateEngine()\n\ndef mapping = ['ccfield':'ccfields', 'bccfield':'bccfields', 'fromAddr': 'sender', 'recipient': 'recipient', 'subject': 'subject' ]\n\ndef config = (ConfigObject) row.inject( ['recipientHdr': 'email', 'mail.smtp.host': 'bumblebee.forest.usf.edu'] ) { map, k, v -> \n\tif(v.key in mapping.keySet()) {\n\t\tmap[ mapping[ k ] ?: k ] = v ; \n\t}\n\treturn map \n}\n\nconfig.put('ccfields', row['ccfield'])\nconfig.put('bccfields', row['bccfield'])\nconfig.put('fromAddr', row['sender'])\nconfig.put('recipient', row['recipient'])\nconfig.put('recipientHdr', 'email')\nconfig.put('mail.smtp.host','bumblebee.forest.usf.edu')\nconfig.put('subject', row['subject'])\n\t\nemailText = templateEngine.createTemplate(row['templateText']).make(row['templateData']).toString()\nmailEngine.sendEmail(config,emailText)",
  "class": "edu.usf.RuleChains.Groovy"
}